class Tree {
    public ArrayList<Integer> reverseLevelOrder(Node root) {
        ArrayList<Integer> result = new ArrayList<>();
        if (root == null) return result;

        Queue<Node> q = new LinkedList<>();
        Stack<Integer> st = new Stack<>();

        q.add(root);

        while (!q.isEmpty()) {
            Node curr = q.poll();
            st.push(curr.data);

            // enqueue right first, then left
            if (curr.right != null) q.add(curr.right);
            if (curr.left != null) q.add(curr.left);
        }

        while (!st.isEmpty()) {
            result.add(st.pop());
        }

        return result;
    }
}
